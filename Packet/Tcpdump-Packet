tcpdump {A} [B:C] {D} {E} {F} {G}
| **Letter** | **Meaning**                         | **Example**                               | **Explanation**                                  |    |                               |
| ---------- | ----------------------------------- | ----------------------------------------- | ------------------------------------------------ | -- | ----------------------------- |
| **A**      | Protocol                            | `ether`, `arp`, `ip`, `ip6`, `tcp`, `udp` | Selects which header to inspect                  |    |                               |
| **B**      | Header Byte Offset                  | `ether[12:2]`                             | Starts at byte 12 in Ethernet header (EtherType) |    |                               |
| **C**      | Byte Length (optional, default = 1) | `:2`                                      | Reads 2 bytes from the specified offset          |    |                               |
| **D**      | Bitwise Mask (optional)             | `ip[6] & 0x40 != 0`                       | Checks if "Don't Fragment" bit is set            |    |                               |
| **E**      | Relational Operator                 | `=`, `==`, `!=`, `>`, `<`, `<=`           | Used for comparison                              |    |                               |
| **F**      | Result of Expression                | `0x0806`, `53`                            | Value being compared                             |    |                               |
| **G**      | Logical Operator                    | `&&`, \`                                  |                                                  | \` | Combines multiple expressions |
+------------------------------------------------------------------------------------+
| 1. Capture ARP Traffic                                                             |
+------------------------------------------------------------------------------------+
| Command:                                                                           |
| tcpdump -i eth0 'ether[12:2] = 0x0806'                                            |
|                                                                                    |
| Explanation:                                                                       |
|  ether        → Inspect Ethernet header                                           |
|  [12:2]       → Start at byte 12, read 2 bytes (EtherType field)                 |
|  = 0x0806     → Matches ARP (EtherType = 0x0806)                                 |
+------------------------------------------------------------------------------------+
+------------------------------------------------------------------------------------+
| 2. Capture TCP Traffic via IP Protocol Field                                      |
+------------------------------------------------------------------------------------+
| Command:                                                                           |
| tcpdump -i eth1 'ip[9] = 0x06'                                                    |
|                                                                                    |
| Explanation:                                                                       |
|  ip           → Inspect IP header                                                 |
|  [9]          → Byte 9 = Protocol field                                           |
|  = 0x06       → TCP protocol number                                              |
+------------------------------------------------------------------------------------+
+------------------------------------------------------------------------------------+
| 3. Capture TCP Packets for DNS (Port 53)                                          |
+------------------------------------------------------------------------------------+
| Command:                                                                           |
| tcpdump -i eth0 'tcp[0:2] = 53 || tcp[2:2] = 53'                                  |
|                                                                                    |
| Explanation:                                                                       |
|  tcp[0:2]     → Source port                                                      |
|  tcp[2:2]     → Destination port                                                 |
|  ||           → OR operator                                                      |
|  Matches when either source OR destination port = 53                              |
+------------------------------------------------------------------------------------+
+------------------------------------------------------------------------------------+
| 4. Capture IPv4 Packets Except SSH and Telnet                                     |
+------------------------------------------------------------------------------------+
| Command:                                                                           |
| tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 && tcp[2:2] != 23)'              |
|                                                                                    |
| Explanation:                                                                       |
|  ether[12:2]   → IPv4 EtherType (0x0800)                                         |
|  &&             → AND                                                            |
|  tcp[2:2] != 22 → Exclude destination port 22 (SSH)                               |
|  tcp[2:2] != 23 → Exclude destination port 23 (Telnet)                            |
+------------------------------------------------------------------------------------+
ARP → ether[12:2] = 0x0806
IPv4 → ether[12:2] = 0x0800
TCP  → ip[9] = 0x06
UDP  → ip[9] = 0x11
✔ Captures packets at the network interface level.
✔ By default, tcpdump shows packet headers, not payload (use -A or -X for full payload).
✔ Use ' and " carefully in filters; they matter for complex expressions.
✔ Default snap length may truncate packets; use -s 0 for full capture.
✔ Use -nn to prevent name resolution for IP and ports (faster and accurate).
✔ Use -i <interface> to specify the interface (use tcpdump -D to list interfaces).
✔ For writing capture to file: -w <filename.pcap>, and read with -r.
✔ Filter syntax uses BPF (Berkeley Packet Filter).
✔ Offsets in expressions start from the beginning of the **specified protocol header**.
✔ Common filter structure: [protocol][offset:length] operator value.
✔ Operator examples: =, ==, !=, >, <, >=, <=
✔ Combine conditions: && (AND), || (OR)
✔ Length: 1, 2, or 4 bytes (default is 1).
# Capture HTTP traffic (port 80)
tcpdump -i eth0 'tcp port 80'
---------------------------------------------------------------------------------------------------
# Capture HTTPS (port 443)
tcpdump -i eth0 'tcp port 443'

# Capture DNS queries (UDP 53)
tcpdump -i eth0 'udp port 53'

# Capture SSH but exclude a specific IP
tcpdump -i eth0 'tcp port 22 and not host 192.168.1.10'

# Capture only SYN packets (TCP handshake)
tcpdump 'tcp[tcpflags] & tcp-syn != 0 and tcp[tcpflags] & tcp-ack == 0'
-----------------------------------------------------------------------------------------------------------------
